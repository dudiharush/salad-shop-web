{"version":3,"sources":["action-creators.ts","components/stages/landing-page.tsx","models/order-context.ts","components/stages/ingredients/ingredient-picker.tsx","models/types.ts","components/stages/ingredients/ingredients-page.tsx","data-loaders.ts","components/stages/checkout/details-field.tsx","utils.ts","components/stages/checkout/checkout-page.tsx","components/stages/summary-modal/summary-modal.tsx","components/stages/summary-modal/order-details-field.tsx","components/stages/summary-modal/order-summary.tsx","components/stage-container.tsx","order-salad-reducer.ts","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["OrderActions","LandingPage","_ref","goToNext","react","className","onClick","OrderContext","React","createContext","IngredientsPicker","props","ingredient","isReadOnly","name","price","ingredientAmount","useContext","state","ingredientsOrder","get","concat","type","min","step","onChange","event","target","value","disabled","defaultValue","toString","OrderStage","IngredientsPage","_useContext","dispatch","ingredientsArr","Array","from","ingredients","values","useEffect","size","fetch","then","res","json","data","items","ingretients","ingredientMap","Map","forEach","ingretient","set","SetIngredients","payload","setIngredietns","addItem","ingredientName","amount","itemName","AddIngrediantToOrder","orderItem","map","ingredient_picker_IngredientsPicker","key","DetailsField","fieldName","isValid","getTotalPrice","reduce","accPrice","_ref2","Object","slicedToArray","CheckoutPage","totalPrice","setShowModal","keys","details_field_DetailsField","SetOrderInfo","setName","email","setEmail","notes","setAdditionalNotes","goToPrev","SummaryModal","_React$Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","handleClose","inherits","createClass","show","ReactDOM","createPortal","children","document","body","OrderDetailsField","OrderSummary","order_details_field_OrderDetailsField","StageContainer","_stagesMap","_useState","useState","Landing","_useState2","currentStage","setStage","_useState3","_useState4","showModal","stagesMap","defineProperty","landing_page_LandingPage","Ingrediants","ingredients_page_IngredientsPage","Checkout","checkout_page_CheckoutPage","summary_modal_SummaryModal","order_summary_OrderSummary","OrderSaladReducer","action","objectSpread","_action$payload","Error","initialState","App","_useReducer","useReducer","_useReducer2","src","alt","Provider","stage_container_StageContainer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","src_App_0","getElementById","URL","process","origin","addEventListener","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.441c0b78.chunk.js","sourcesContent":["import { Ingredient } from \"./models/ingredient\";\r\n\r\nexport enum OrderActions {\r\n  SetIngredients,\r\n  AddIngrediantToOrder,\r\n  SetOrderInfo\r\n}\r\n\r\nexport const setEmail = (email: string) => {\r\n  return { type: OrderActions.SetOrderInfo, payload: { email } };\r\n};\r\n\r\nexport const setName = (name: string) => {\r\n  return { type: OrderActions.SetOrderInfo, payload: { name } };\r\n};\r\n\r\nexport const setAdditionalNotes = (notes: string) => {\r\n  return { type: OrderActions.SetOrderInfo, payload: { notes } };\r\n};\r\n\r\nexport const setIngredietns = (ingredients: Array<Ingredient>) => {\r\n  const ingredientMap = new Map<string, Ingredient>();\r\n  ingredients.forEach((ingretient: Ingredient) =>\r\n    ingredientMap.set(ingretient.name, ingretient)\r\n  );\r\n  return {\r\n    type: OrderActions.SetIngredients,\r\n    payload: { ingredients: ingredientMap }\r\n  };\r\n};\r\n\r\nexport const orderItem = (itemName: string, amount: number) => {\r\n  return {\r\n    type: OrderActions.AddIngrediantToOrder,\r\n    payload: { itemName, amount }\r\n  };\r\n};\r\n","import * as React from \"react\";\r\nimport { IStageEvents } from \"../../models/types\";\r\n\r\nexport const LandingPage = ({ goToNext }: IStageEvents) => {\r\n  const orderSaladOnClick = () => goToNext && goToNext();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"page-header\">{\"Welcome\"}</div>\r\n      <div className=\"page-content\">\r\n        <div className=\"button\" onClick={orderSaladOnClick}>\r\n          {\"Order Salad\"}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { OrderActions } from \"../action-creators\";\r\nimport { IOrderState } from \"../order-salad-reducer\";\r\n\r\nexport interface IOrderContext {\r\n  dispatch?: React.Dispatch<{ type: OrderActions; payload?: any }>;\r\n  state?: IOrderState;\r\n}\r\n\r\nexport const OrderContext = React.createContext<IOrderContext>({});\r\n","import * as React from \"react\";\r\nimport \"./ingredients-picker.css\";\r\nimport { Ingredient } from \"../../../models/ingredient\";\r\nimport { useContext } from \"react\";\r\nimport { OrderContext } from \"../../../models/order-context\";\r\n\r\ninterface IngredientsPickerProps {\r\n  ingredient: Ingredient;\r\n  isReadOnly?: boolean;\r\n  onChange?: (value: string) => void;\r\n}\r\n\r\nexport const IngredientsPicker = (props: IngredientsPickerProps) => {\r\n  const { ingredient, isReadOnly } = props;\r\n  const { name, price } = ingredient;\r\n  const {\r\n    state: { ingredientsOrder }\r\n  } = useContext(OrderContext);\r\n\r\n  const ingredientAmount = ingredientsOrder.get(name);\r\n\r\n  const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) =>\r\n    props.onChange && props.onChange(event.target.value);\r\n\r\n  return (\r\n    <div className=\"ingredients-picker\">\r\n      <div className=\"info\">\r\n        <span className=\"name-label\">{name}</span>\r\n        <span className=\"price-label\">{`$${price}`}</span>\r\n      </div>\r\n\r\n      <input\r\n        className=\"amount-picker\"\r\n        type=\"number\"\r\n        min={0}\r\n        step={1}\r\n        onChange={handleOnChange}\r\n        disabled={isReadOnly}\r\n        defaultValue={ingredientAmount && ingredientAmount.toString()}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","  export enum OrderStage {\r\n    Landing,\r\n    Ingrediants,\r\n    Checkout\r\n  }\r\n\r\n  export interface IStageEvents{\r\n    goToNext?: ()=> void;\r\n    goToPrev?: ()=> void;\r\n}","import * as React from \"react\";\r\nimport { IngredientsPicker } from \"./ingredient-picker\";\r\nimport { OrderContext } from \"../../../models/order-context\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { setIngredietns, orderItem } from \"../../../action-creators\";\r\nimport { loadIngredients } from \"../../../data-loaders\";\r\nimport { IStageEvents } from \"../../../models/types\";\r\n\r\nexport const IngredientsPage = (props: IStageEvents) => {\r\n  const { dispatch, state } = useContext(OrderContext);\r\n\r\n  const ingredientsArr = Array.from(state.ingredients.values());\r\n\r\n  useEffect(() => {\r\n    if (state.ingredients.size === 0) {\r\n      loadIngredients().then(ingretients => {\r\n        dispatch(setIngredietns(ingretients));\r\n      });\r\n    }\r\n  }, [state.ingredients, dispatch]);\r\n\r\n  const addItem = (ingredientName: string) => (amount: string) =>\r\n    dispatch(orderItem(ingredientName, +amount));\r\n\r\n  const proceedToCheckoutClick = () => props.goToNext && props.goToNext();\r\n  if (state.ingredients.size === 0) return <span>Loading...</span>;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"page-header\">{\"Select Ingredients\"}</div>\r\n      <div className=\"page-content\">\r\n        {ingredientsArr &&\r\n          ingredientsArr.map(ingredient => (\r\n            <IngredientsPicker\r\n              key={ingredient.name}\r\n              ingredient={ingredient}\r\n              onChange={addItem(ingredient.name)}\r\n            />\r\n          ))}\r\n        <div className=\"button\" onClick={proceedToCheckoutClick}>\r\n          {\"Proceed To Checkout\"}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { Ingredient } from \"./models/ingredient\";\r\n\r\nexport const loadIngredients = (): Promise<Ingredient[]> => {\r\n  return fetch(\"salad.json\")\r\n    .then(res => {\r\n      return res.json();\r\n    })\r\n    .then(data => {\r\n      return data.items;\r\n    });\r\n};\r\n","import * as React from \"react\";\r\n\r\nexport const DetailsField = ({\r\n  fieldName,\r\n  onChange,\r\n  isValid = true\r\n}: {\r\n  fieldName: string;\r\n  onChange: (value: string) => void;\r\n  isValid?: boolean;\r\n}) => {\r\n  const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) =>\r\n    onChange && onChange(event.target.value);\r\n\r\n  return (\r\n    <div className=\"order-details-field\">\r\n      <span>{`${fieldName}:`}</span>\r\n      <input type=\"text\" onChange={handleOnChange} />\r\n    </div>\r\n  );\r\n};\r\n","import { Ingredient } from \"./models/ingredient\";\r\n\r\nexport const getTotalPrice = (\r\n  ingredients: Map<string, Ingredient>,\r\n  ingredientsOrder: Map<string, number>\r\n): number => {\r\n  const totalPrice = Array.from(ingredientsOrder).reduce(\r\n    (accPrice, [ingredientName, ingredientAmount]) => {\r\n      const ingredient = ingredients.get(ingredientName);\r\n      accPrice += ingredient.price * ingredientAmount;\r\n      return accPrice;\r\n    },\r\n    0\r\n  );\r\n\r\n  return totalPrice;\r\n};\r\n","import * as React from \"react\";\r\nimport { IngredientsPicker } from \"../ingredients/ingredient-picker\";\r\nimport \"./checkout-page.css\";\r\nimport { useEffect, useContext } from \"react\";\r\nimport { DetailsField } from \"./details-field\";\r\nimport { getTotalPrice } from \"../../../utils\";\r\nimport { OrderContext } from \"../../../models/order-context\";\r\nimport {\r\n  setName,\r\n  setEmail,\r\n  setAdditionalNotes\r\n} from \"../../../action-creators\";\r\nimport { IStageEvents } from \"../../../models/types\";\r\n\r\nexport const CheckoutPage = (\r\n  props: IStageEvents & {\r\n    setShowModal: React.Dispatch<React.SetStateAction<boolean>>;\r\n  }\r\n) => {\r\n  const { dispatch, state } = useContext(OrderContext);\r\n\r\n  const totalPrice = getTotalPrice(state.ingredients, state.ingredientsOrder);\r\n\r\n  useEffect(() => () => props.setShowModal(false), [props]);\r\n\r\n  const orderButtonClick = () => props.setShowModal(true);\r\n\r\n  const goBackButtonClick = () => props.goToPrev && props.goToPrev();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"page-header\">{\"Your Salad:\"}</div>\r\n      <div className=\"checkout-wrapper\">\r\n        <div>\r\n          {Array.from(state.ingredientsOrder.keys()).map(ingredientName => (\r\n            <IngredientsPicker\r\n              key={ingredientName}\r\n              ingredient={state.ingredients.get(ingredientName)}\r\n              isReadOnly\r\n            />\r\n          ))}\r\n\r\n          <div className=\"total-price\">{`Total Price is: $${totalPrice}`}</div>\r\n        </div>\r\n        <div className=\"order-details-wrapper\">\r\n          <DetailsField\r\n            fieldName=\"Name\"\r\n            onChange={name => dispatch(setName(name))}\r\n          />\r\n          <DetailsField\r\n            fieldName=\"Email\"\r\n            onChange={email => dispatch(setEmail(email))}\r\n          />\r\n          <DetailsField\r\n            fieldName=\"Additional Notes\"\r\n            onChange={notes => dispatch(setAdditionalNotes(notes))}\r\n          />\r\n          <div className=\"buttons-wrapper\">\r\n            <span className=\"button\" onClick={goBackButtonClick}>\r\n              {\"Go Back\"}\r\n            </span>\r\n            <span className={\"button\"} onClick={orderButtonClick}>\r\n              {\"Order\"}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport \"./summary-modal.css\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nexport interface SummaryModalprops {\r\n  handleClose: () => void;\r\n  show: boolean;\r\n}\r\n\r\nexport class SummaryModal extends React.Component<SummaryModalprops> {\r\n  render() {\r\n    const { show } = this.props;\r\n    return show\r\n      ? ReactDOM.createPortal(\r\n          <div className=\"modal display-block\">\r\n            <div className=\"modal-main\">\r\n              {this.props.children}\r\n              <div className=\"close-button\" onClick={this.handleClose}>\r\n                Close\r\n              </div>\r\n            </div>\r\n          </div>,\r\n          document.body\r\n        )\r\n      : null;\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.props.handleClose && this.props.handleClose();\r\n  };\r\n}\r\n","import * as React from \"react\";\r\n\r\nexport const OrderDetailsField = ({\r\n  fieldName,\r\n  data\r\n}: {\r\n  fieldName: string;\r\n  data: string;\r\n}) => {\r\n  return (\r\n    <div className=\"order-details-field\">\r\n      <span>{`${fieldName}:`}</span>\r\n      <span>{`${data}`}</span>\r\n    </div>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { OrderContext } from \"../../../models/order-context\";\r\nimport { getTotalPrice } from \"../../../utils\";\r\nimport { OrderDetailsField } from \"./order-details-field\";\r\n\r\nexport const OrderSummary = () => {\r\n  const { state } = useContext(OrderContext);\r\n  return (\r\n    <div>\r\n      Thank You Very Much For Ordering From Salad Shop. Food Is On its Way...\r\n      <OrderDetailsField\r\n        fieldName=\"Total Price\"\r\n        data={getTotalPrice(\r\n          state.ingredients,\r\n          state.ingredientsOrder\r\n        ).toString()}\r\n      />\r\n      <OrderDetailsField fieldName=\"Name\" data={state.name} />\r\n      <OrderDetailsField fieldName=\"Email\" data={state.email} />\r\n      <OrderDetailsField fieldName=\"Additional Notes\" data={state.notes} />\r\n    </div>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { LandingPage } from \"./stages/landing-page\";\r\nimport { IngredientsPage } from \"./stages/ingredients/ingredients-page\";\r\nimport { CheckoutPage } from \"./stages/checkout/checkout-page\";\r\nimport { SummaryModal } from \"./stages/summary-modal/summary-modal\";\r\nimport { OrderSummary } from \"./stages/summary-modal/order-summary\";\r\nimport { useState } from \"react\";\r\nimport { OrderStage } from \"../models/types\";\r\n\r\nexport const StageContainer = () => {\r\n  const [currentStage, setStage] = useState(OrderStage.Landing);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const stagesMap = {\r\n    [OrderStage.Landing]: () => (\r\n      <LandingPage goToNext={() => setStage(OrderStage.Ingrediants)} />\r\n    ),\r\n    [OrderStage.Ingrediants]: () => (\r\n      <IngredientsPage\r\n        goToPrev={() => setStage(OrderStage.Landing)}\r\n        goToNext={() => setStage(OrderStage.Checkout)}\r\n      />\r\n    ),\r\n    [OrderStage.Checkout]: () => (\r\n      <CheckoutPage\r\n        goToPrev={() => setStage(OrderStage.Ingrediants)}\r\n        setShowModal={setShowModal}\r\n      />\r\n    )\r\n  };\r\n\r\n  const getStage = () => {\r\n    return stagesMap[currentStage]();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {showModal && (\r\n        <SummaryModal show handleClose={() => setStage(OrderStage.Landing)}>\r\n          <OrderSummary />\r\n        </SummaryModal>\r\n      )}\r\n      {getStage()}\r\n    </div>\r\n  );\r\n};\r\n","import { OrderActions } from \"./action-creators\";\r\nimport { Ingredient } from \"./models/ingredient\";\r\n\r\nexport function OrderSaladReducer(state: any, action: {type: OrderActions, payload?: any}): IOrderState {\r\n    switch (action.type) {\r\n      case OrderActions.SetIngredients:\r\n        return {...state, ingredients: action.payload.ingredients};\r\n      case OrderActions.AddIngrediantToOrder:\r\n        const {itemName, amount} = action.payload;\r\n        return {...state, ingredientsOrder: new Map(state.ingredientsOrder.set(itemName, amount))};\r\n      case OrderActions.SetOrderInfo:\r\n        return {...state, ...action.payload }\r\n  \r\n      default:\r\n        throw new Error();\r\n    }\r\n  }\r\n  \r\n  export interface IOrderState {\r\n      email: string;\r\n      name: string;\r\n      notes: string;\r\n      ingredientsOrder: Map<string, number>;\r\n      ingredients: Map<string, Ingredient>;\r\n  }\r\n  \r\n  export const initialState: IOrderState = {\r\n    email: '',\r\n    name: '',\r\n    notes: '',\r\n    ingredientsOrder: new Map<string,number>(),\r\n    ingredients: new Map<string,Ingredient>()\r\n  }","import * as React from \"react\";\r\n\r\nimport { StageContainer } from \"./components/stage-container\";\r\n\r\nimport \"./App.css\";\r\nimport { useReducer } from \"react\";\r\nimport { OrderContext } from \"./models/order-context\";\r\nimport { OrderSaladReducer, initialState } from \"./order-salad-reducer\";\r\n\r\nconst App = () => {\r\n  const [state, dispatch] = useReducer(OrderSaladReducer, initialState);\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"store-header\">\r\n        <img src=\"salad-icon.png\" className=\"logo\" alt=\"sald-icon\" />\r\n        <span>Salad Shop</span>\r\n      </div>\r\n      <OrderContext.Provider value={{ state, dispatch }}>\r\n        <StageContainer />\r\n      </OrderContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// tslint:disable:no-console\r\n// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the 'N+1' visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL!,\r\n      window.location.toString()\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker) {\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the old content will have been purged and\r\n                // the fresh content will have been added to the cache.\r\n                // It's the perfect time to display a 'New content is\r\n                // available; please refresh.' message in your web app.\r\n                console.log('New content is available; please refresh.');\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // 'Content is cached for offline use.' message.\r\n                console.log('Content is cached for offline use.');\r\n              }\r\n            }\r\n          };\r\n        }\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type')!.indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root') as HTMLElement\r\n);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}