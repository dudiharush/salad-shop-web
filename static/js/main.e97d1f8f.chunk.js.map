{"version":3,"sources":["action-creators.ts","components/stages/landing-page.tsx","models/order-context.ts","components/stages/ingredients/ingredient-picker.tsx","models/types.ts","config.js","components/stages/ingredients/ingredients-page.tsx","data-loaders.ts","components/stages/checkout/details-field.tsx","utils.ts","components/stages/checkout/checkout-page.tsx","components/stages/summary-modal/summary-modal.tsx","components/stages/summary-modal/order-details-field.tsx","components/stages/summary-modal/order-summary.tsx","components/stage-container.tsx","order-salad-reducer.ts","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["OrderActions","LandingPage","_ref","goToNext","react","className","onClick","OrderContext","React","createContext","IngredientsPicker","props","ingredient","isReadOnly","name","price","ingredientAmount","useContext","state","ingredientsOrder","get","concat","type","min","step","onChange","event","target","value","disabled","defaultValue","toString","OrderStage","baseUrl","IngredientsPage","_useContext","dispatch","ingredientsArr","Array","from","ingredients","values","useEffect","size","fetch","then","res","json","data","items","ingretients","ingredientMap","Map","forEach","ingretient","set","SetIngredients","payload","setIngredietns","addItem","ingredientName","amount","itemName","AddIngrediantToOrder","orderItem","map","ingredient_picker_IngredientsPicker","key","DetailsField","fieldName","_ref$isValid","isValid","fieldClassName","getTotalPrice","reduce","accPrice","_ref2","Object","slicedToArray","CheckoutPage","goToPrev","setShowModal","totalPrice","_React$useState","isEmailValid","isFormValidated","_React$useState2","validations","setValidations","every","toConsumableArray","keys","details_field_DetailsField","SetOrderInfo","setName","email","setEmail","notes","setAdditionalNotes","validator","SummaryModal","_React$Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","handleClose","inherits","createClass","show","ReactDOM","createPortal","children","document","body","OrderDetailsField","OrderSummary","order_details_field_OrderDetailsField","StageContainer","_stagesMap","_useState","useState","Landing","_useState2","currentStage","setStage","_useState3","_useState4","showModal","stagesMap","defineProperty","landing_page_LandingPage","Ingrediants","ingredients_page_IngredientsPage","Checkout","checkout_page_CheckoutPage","summary_modal_SummaryModal","order_summary_OrderSummary","OrderSaladReducer","action","objectSpread","_action$payload","Error","initialState","App","_useReducer","useReducer","_useReducer2","src","alt","Provider","stage_container_StageContainer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","src_App_0","getElementById","URL","process","origin","addEventListener","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e97d1f8f.chunk.js","sourcesContent":["import { Ingredient } from \"./models/ingredient\";\r\n\r\nexport enum OrderActions {\r\n  SetIngredients,\r\n  AddIngrediantToOrder,\r\n  SetOrderInfo\r\n}\r\n\r\nexport const setEmail = (email: string) => {\r\n  return { type: OrderActions.SetOrderInfo, payload: { email } };\r\n};\r\n\r\nexport const setName = (name: string) => {\r\n  return { type: OrderActions.SetOrderInfo, payload: { name } };\r\n};\r\n\r\nexport const setAdditionalNotes = (notes: string) => {\r\n  return { type: OrderActions.SetOrderInfo, payload: { notes } };\r\n};\r\n\r\nexport const setIngredietns = (ingredients: Array<Ingredient>) => {\r\n  const ingredientMap = new Map<string, Ingredient>();\r\n  ingredients.forEach((ingretient: Ingredient) =>\r\n    ingredientMap.set(ingretient.name, ingretient)\r\n  );\r\n  return {\r\n    type: OrderActions.SetIngredients,\r\n    payload: { ingredients: ingredientMap }\r\n  };\r\n};\r\n\r\nexport const orderItem = (itemName: string, amount: number) => {\r\n  return {\r\n    type: OrderActions.AddIngrediantToOrder,\r\n    payload: { itemName, amount }\r\n  };\r\n};\r\n","import * as React from \"react\";\r\nimport { IStageEvents } from \"../../models/types\";\r\n\r\nexport const LandingPage = ({ goToNext }: IStageEvents) => {\r\n  const orderSaladOnClick = () => goToNext && goToNext();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"page-header\">{\"Welcome\"}</div>\r\n      <div className=\"page-content\">\r\n        <div className=\"button\" onClick={orderSaladOnClick}>\r\n          {\"Order Salad\"}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { OrderActions } from \"../action-creators\";\r\nimport { IOrderState } from \"../order-salad-reducer\";\r\n\r\nexport interface IOrderContext {\r\n  dispatch?: React.Dispatch<{ type: OrderActions; payload?: any }>;\r\n  state?: IOrderState;\r\n}\r\n\r\nexport const OrderContext = React.createContext<IOrderContext>({});\r\n","import * as React from \"react\";\r\nimport \"./ingredients-picker.css\";\r\nimport { Ingredient } from \"../../../models/ingredient\";\r\nimport { useContext } from \"react\";\r\nimport { OrderContext } from \"../../../models/order-context\";\r\n\r\ninterface IngredientsPickerProps {\r\n  ingredient: Ingredient;\r\n  isReadOnly?: boolean;\r\n  onChange?: (value: string) => void;\r\n}\r\n\r\nexport const IngredientsPicker = (props: IngredientsPickerProps) => {\r\n  const { ingredient, isReadOnly } = props;\r\n  const { name, price } = ingredient;\r\n  const {\r\n    state: { ingredientsOrder }\r\n  } = useContext(OrderContext);\r\n\r\n  const ingredientAmount = ingredientsOrder.get(name);\r\n\r\n  const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) =>\r\n    props.onChange && props.onChange(event.target.value);\r\n\r\n  return (\r\n    <div className=\"ingredients-picker\">\r\n      <div className=\"info\">\r\n        <span className=\"name-label\">{name}</span>\r\n        <span className=\"price-label\">{`$${price}`}</span>\r\n      </div>\r\n\r\n      <input\r\n        className=\"amount-picker\"\r\n        type=\"number\"\r\n        min={0}\r\n        step={1}\r\n        onChange={handleOnChange}\r\n        disabled={isReadOnly}\r\n        defaultValue={ingredientAmount && ingredientAmount.toString()}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","  export enum OrderStage {\r\n    Landing,\r\n    Ingrediants,\r\n    Checkout\r\n  }\r\n\r\n  export interface IStageEvents{\r\n    goToNext?: ()=> void;\r\n    goToPrev?: ()=> void;\r\n}","export const baseUrl = \"https://dudiharush.github.io/salad-shop-web\";\r\n","import * as React from \"react\";\r\nimport { IngredientsPicker } from \"./ingredient-picker\";\r\nimport { OrderContext } from \"../../../models/order-context\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { setIngredietns, orderItem } from \"../../../action-creators\";\r\nimport { loadIngredients } from \"../../../data-loaders\";\r\nimport { IStageEvents } from \"../../../models/types\";\r\n\r\nexport const IngredientsPage = (props: IStageEvents) => {\r\n  const { dispatch, state } = useContext(OrderContext);\r\n\r\n  const ingredientsArr = Array.from(state.ingredients.values());\r\n\r\n  useEffect(() => {\r\n    if (state.ingredients.size === 0) {\r\n      loadIngredients().then(ingretients => {\r\n        dispatch(setIngredietns(ingretients));\r\n      });\r\n    }\r\n  }, [state.ingredients, dispatch]);\r\n\r\n  const addItem = (ingredientName: string) => (amount: string) =>\r\n    dispatch(orderItem(ingredientName, +amount));\r\n\r\n  const proceedToCheckoutClick = () => props.goToNext && props.goToNext();\r\n  if (state.ingredients.size === 0) return <span>Loading...</span>;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"page-header\">{\"Select Ingredients\"}</div>\r\n      <div className=\"page-content\">\r\n        {ingredientsArr &&\r\n          ingredientsArr.map(ingredient => (\r\n            <IngredientsPicker\r\n              key={ingredient.name}\r\n              ingredient={ingredient}\r\n              onChange={addItem(ingredient.name)}\r\n            />\r\n          ))}\r\n        <div className=\"button\" onClick={proceedToCheckoutClick}>\r\n          {\"Proceed To Checkout\"}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { Ingredient } from \"./models/ingredient\";\r\nimport { baseUrl } from \"./config\";\r\n\r\nexport const loadIngredients = (): Promise<Ingredient[]> => {\r\n  return fetch(`${baseUrl}/salad.json`)\r\n    .then(res => {\r\n      return res.json();\r\n    })\r\n    .then(data => {\r\n      return data.items;\r\n    });\r\n};\r\n","import * as React from \"react\";\r\nimport \"./details-field.css\";\r\n\r\nexport const DetailsField = ({\r\n  fieldName,\r\n  onChange,\r\n  defaultValue,\r\n  isValid = true\r\n}: {\r\n  fieldName: string;\r\n  onChange: (value: string) => void;\r\n  isValid?: boolean;\r\n  defaultValue?: string;\r\n}) => {\r\n  const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) =>\r\n    onChange && onChange(event.target.value);\r\n  const fieldClassName =\r\n    \"order-details-field\" + (!isValid ? \" error-color\" : \"\");\r\n  return (\r\n    <div className={fieldClassName}>\r\n      <span className=\"field-name\">{`${fieldName}:`}</span>\r\n      <div>\r\n        {\r\n          <div className=\"error-message error-color\">\r\n            {!isValid ? \"invalid value\" : \"\"}\r\n          </div>\r\n        }\r\n        <input\r\n          type=\"text\"\r\n          onChange={handleOnChange}\r\n          defaultValue={defaultValue}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { Ingredient } from \"./models/ingredient\";\r\n\r\nexport const getTotalPrice = (\r\n  ingredients: Map<string, Ingredient>,\r\n  ingredientsOrder: Map<string, number>\r\n): number => {\r\n  const totalPrice = Array.from(ingredientsOrder).reduce(\r\n    (accPrice, [ingredientName, ingredientAmount]) => {\r\n      const ingredient = ingredients.get(ingredientName);\r\n      accPrice += ingredient.price * ingredientAmount;\r\n      return accPrice;\r\n    },\r\n    0\r\n  );\r\n\r\n  return totalPrice;\r\n};\r\n","import * as React from \"react\";\r\nimport { IngredientsPicker } from \"../ingredients/ingredient-picker\";\r\nimport \"./checkout-page.css\";\r\nimport { useEffect, useContext } from \"react\";\r\nimport { DetailsField } from \"./details-field\";\r\nimport { getTotalPrice } from \"../../../utils\";\r\nimport { OrderContext } from \"../../../models/order-context\";\r\nimport {\r\n  setName,\r\n  setEmail,\r\n  setAdditionalNotes\r\n} from \"../../../action-creators\";\r\nimport { IStageEvents } from \"../../../models/types\";\r\nimport * as validator from \"validator\";\r\n\r\nexport const CheckoutPage = ({\r\n  goToPrev,\r\n  setShowModal\r\n}: IStageEvents & {\r\n  setShowModal: React.Dispatch<React.SetStateAction<boolean>>;\r\n}) => {\r\n  const { dispatch, state } = useContext(OrderContext);\r\n\r\n  const totalPrice = getTotalPrice(state.ingredients, state.ingredientsOrder);\r\n  const [validations, setValidations] = React.useState({\r\n    isEmailValid: true,\r\n    isFormValidated: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (Object.values(validations).every(isValid => isValid)) {\r\n      setShowModal(true);\r\n    }\r\n    return () => {\r\n      setShowModal(false);\r\n    };\r\n  }, [setShowModal, ...Object.values(validations)]);\r\n\r\n  const orderButtonClick = () => {\r\n    setValidations({\r\n      isEmailValid: validator.isEmail(state.email),\r\n      isFormValidated: true\r\n    });\r\n  };\r\n\r\n  const goBackButtonClick = () => goToPrev && goToPrev();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"page-header\">{\"Your Salad:\"}</div>\r\n      <div className=\"checkout-wrapper\">\r\n        <div>\r\n          {Array.from(state.ingredientsOrder.keys()).map(ingredientName => (\r\n            <IngredientsPicker\r\n              key={ingredientName}\r\n              ingredient={state.ingredients.get(ingredientName)}\r\n              isReadOnly\r\n            />\r\n          ))}\r\n\r\n          <div className=\"total-price\">{`Total Price is: $${totalPrice}`}</div>\r\n        </div>\r\n        <div className=\"order-details-wrapper\">\r\n          <DetailsField\r\n            fieldName=\"Name\"\r\n            defaultValue={state.name}\r\n            onChange={name => dispatch(setName(name))}\r\n          />\r\n          <DetailsField\r\n            fieldName=\"Email\"\r\n            defaultValue={state.email}\r\n            onChange={email => dispatch(setEmail(email))}\r\n            isValid={validations.isEmailValid}\r\n          />\r\n          <DetailsField\r\n            fieldName=\"Additional Notes\"\r\n            defaultValue={state.notes}\r\n            onChange={notes => dispatch(setAdditionalNotes(notes))}\r\n          />\r\n          <div className=\"buttons-wrapper\">\r\n            <span className=\"button\" onClick={goBackButtonClick}>\r\n              {\"Go Back\"}\r\n            </span>\r\n            <span className={\"button\"} onClick={orderButtonClick}>\r\n              {\"Order\"}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport \"./summary-modal.css\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nexport interface SummaryModalprops {\r\n  handleClose: () => void;\r\n  show: boolean;\r\n}\r\n\r\nexport class SummaryModal extends React.Component<SummaryModalprops> {\r\n  render() {\r\n    const { show } = this.props;\r\n    return show\r\n      ? ReactDOM.createPortal(\r\n          <div className=\"modal display-block\">\r\n            <div className=\"modal-main\">\r\n              {this.props.children}\r\n              <div className=\"close-button\" onClick={this.handleClose}>\r\n                Close\r\n              </div>\r\n            </div>\r\n          </div>,\r\n          document.body\r\n        )\r\n      : null;\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.props.handleClose && this.props.handleClose();\r\n  };\r\n}\r\n","import * as React from \"react\";\r\n\r\nexport const OrderDetailsField = ({\r\n  fieldName,\r\n  data\r\n}: {\r\n  fieldName: string;\r\n  data: string;\r\n}) => {\r\n  return (\r\n    <div className=\"order-details-field\">\r\n      <span>{`${fieldName}:`}</span>\r\n      <span>{`${data}`}</span>\r\n    </div>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { OrderContext } from \"../../../models/order-context\";\r\nimport { getTotalPrice } from \"../../../utils\";\r\nimport { OrderDetailsField } from \"./order-details-field\";\r\n\r\nexport const OrderSummary = () => {\r\n  const { state } = useContext(OrderContext);\r\n  return (\r\n    <div>\r\n      Thank You Very Much For Ordering From Salad Shop. Food Is On its Way...\r\n      <OrderDetailsField\r\n        fieldName=\"Total Price\"\r\n        data={getTotalPrice(\r\n          state.ingredients,\r\n          state.ingredientsOrder\r\n        ).toString()}\r\n      />\r\n      <OrderDetailsField fieldName=\"Name\" data={state.name} />\r\n      <OrderDetailsField fieldName=\"Email\" data={state.email} />\r\n      <OrderDetailsField fieldName=\"Additional Notes\" data={state.notes} />\r\n    </div>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { LandingPage } from \"./stages/landing-page\";\r\nimport { IngredientsPage } from \"./stages/ingredients/ingredients-page\";\r\nimport { CheckoutPage } from \"./stages/checkout/checkout-page\";\r\nimport { SummaryModal } from \"./stages/summary-modal/summary-modal\";\r\nimport { OrderSummary } from \"./stages/summary-modal/order-summary\";\r\nimport { useState } from \"react\";\r\nimport { OrderStage } from \"../models/types\";\r\n\r\nexport const StageContainer = () => {\r\n  const [currentStage, setStage] = useState(OrderStage.Landing);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const stagesMap = {\r\n    [OrderStage.Landing]: () => (\r\n      <LandingPage goToNext={() => setStage(OrderStage.Ingrediants)} />\r\n    ),\r\n    [OrderStage.Ingrediants]: () => (\r\n      <IngredientsPage\r\n        goToPrev={() => setStage(OrderStage.Landing)}\r\n        goToNext={() => setStage(OrderStage.Checkout)}\r\n      />\r\n    ),\r\n    [OrderStage.Checkout]: () => (\r\n      <CheckoutPage\r\n        goToPrev={() => setStage(OrderStage.Ingrediants)}\r\n        setShowModal={setShowModal}\r\n      />\r\n    )\r\n  };\r\n\r\n  const getStage = () => {\r\n    return stagesMap[currentStage]();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {showModal && (\r\n        <SummaryModal show handleClose={() => setStage(OrderStage.Landing)}>\r\n          <OrderSummary />\r\n        </SummaryModal>\r\n      )}\r\n      {getStage()}\r\n    </div>\r\n  );\r\n};\r\n","import { OrderActions } from \"./action-creators\";\r\nimport { Ingredient } from \"./models/ingredient\";\r\n\r\nexport function OrderSaladReducer(state: any, action: {type: OrderActions, payload?: any}): IOrderState {\r\n    switch (action.type) {\r\n      case OrderActions.SetIngredients:\r\n        return {...state, ingredients: action.payload.ingredients};\r\n      case OrderActions.AddIngrediantToOrder:\r\n        const {itemName, amount} = action.payload;\r\n        return {...state, ingredientsOrder: new Map(state.ingredientsOrder.set(itemName, amount))};\r\n      case OrderActions.SetOrderInfo:\r\n        return {...state, ...action.payload }\r\n  \r\n      default:\r\n        throw new Error();\r\n    }\r\n  }\r\n  \r\n  export interface IOrderState {\r\n      email: string;\r\n      name: string;\r\n      notes: string;\r\n      ingredientsOrder: Map<string, number>;\r\n      ingredients: Map<string, Ingredient>;\r\n  }\r\n  \r\n  export const initialState: IOrderState = {\r\n    email: '',\r\n    name: '',\r\n    notes: '',\r\n    ingredientsOrder: new Map<string,number>(),\r\n    ingredients: new Map<string,Ingredient>()\r\n  }","import * as React from \"react\";\r\n\r\nimport { StageContainer } from \"./components/stage-container\";\r\n\r\nimport \"./App.css\";\r\nimport { useReducer } from \"react\";\r\nimport { OrderContext } from \"./models/order-context\";\r\nimport { OrderSaladReducer, initialState } from \"./order-salad-reducer\";\r\nimport { baseUrl } from \"./config\";\r\n\r\nconst App = () => {\r\n  const [state, dispatch] = useReducer(OrderSaladReducer, initialState);\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"store-header\">\r\n        <img\r\n          src={`${baseUrl}/salad-icon.png`}\r\n          className=\"logo\"\r\n          alt=\"sald-icon\"\r\n        />\r\n        <span>Salad Shop</span>\r\n      </div>\r\n      <OrderContext.Provider value={{ state, dispatch }}>\r\n        <StageContainer />\r\n      </OrderContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// tslint:disable:no-console\r\n// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the 'N+1' visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL!,\r\n      window.location.toString()\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker) {\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the old content will have been purged and\r\n                // the fresh content will have been added to the cache.\r\n                // It's the perfect time to display a 'New content is\r\n                // available; please refresh.' message in your web app.\r\n                console.log('New content is available; please refresh.');\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // 'Content is cached for offline use.' message.\r\n                console.log('Content is cached for offline use.');\r\n              }\r\n            }\r\n          };\r\n        }\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type')!.indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root') as HTMLElement\r\n);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}